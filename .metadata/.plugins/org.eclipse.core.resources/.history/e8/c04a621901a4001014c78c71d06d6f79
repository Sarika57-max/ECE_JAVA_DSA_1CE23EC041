package Com;

import java.util.Arrays;

public class First_Half_Sorted_Array {
	public static void merge(int[] arr,int start,int mid,int end) {
		int n1 = mid - start + 1;
		int n2 = end - mid;
		int [] left = new int [n1];
		int [] right = new int[n2];
		for(int i = 0; i<n1; i++)
			left[i] = arr[start + i];
		for(int j = 0; j<n2; j++)
			right[j] = arr[mid+1+j];
		int i = 0, j = 0, k = start;
		
		while(i < n1 && j < n2) {
			if(left [i] <= right [j]) {
				arr[k++] = left[i++];
				
			}
			else {
				arr[k++] = right[j++];
				
			}
		}
		while(i<n1) arr[k++] = left[i++];
		while(j<n2) arr[k++] = right[j++];
		
	}
	public static void mergeSort(int [] arr, int start, int end) {
		if(start< end) {
			int  mid = (start + end) / 2;
			mergeSort(arr,start,mid);
			mergeSort(arr,mid + 1, end);
			merge(arr, start,mid,end);
			
		}
	}
	public static void main(String[] args) {
		int[] arr = {8,3,2,9,7,1,5,4};
		
		int n = arr.length;
		int half = n/2 - 1;
		
		mergeSort(arr , 0, half);
		System.out.println(" Partially Sorted array :" + Arrays.toString(arr));
	}

}



